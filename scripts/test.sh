#!/bin/bash

# Script para executar testes do PDF Processor API
# Executa testes unit√°rios, integra√ß√£o e verifica√ß√µes de qualidade

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

echo "üß™ Executando testes do PDF Processor API..."

# Verificar se Maven est√° dispon√≠vel
if ! command -v mvn &> /dev/null; then
    log_error "Maven n√£o est√° instalado!"
    exit 1
fi

# Fun√ß√£o para executar comando com tratamento de erro
run_command() {
    local cmd="$1"
    local description="$2"
    
    log_info "$description..."
    if eval "$cmd"; then
        log_success "$description conclu√≠do"
    else
        log_error "$description falhou"
        return 1
    fi
}

# Limpar builds anteriores
run_command "mvn clean -q" "Limpando builds anteriores"

# Compilar projeto
run_command "mvn compile -q" "Compilando projeto"

# Executar formata√ß√£o de c√≥digo
run_command "mvn spotless:check -q" "Verificando formata√ß√£o de c√≥digo"

# Executar Checkstyle
run_command "mvn checkstyle:check -q" "Executando Checkstyle"

# Executar testes unit√°rios
log_info "Executando testes unit√°rios..."
mvn test -q
TEST_RESULT=$?

if [ $TEST_RESULT -eq 0 ]; then
    log_success "Testes unit√°rios passaram"
else
    log_error "Alguns testes falharam"
fi

# Executar testes de integra√ß√£o (se existirem)
log_info "Executando testes de integra√ß√£o..."
mvn verify -DskipUnitTests=true -q
INTEGRATION_RESULT=$?

if [ $INTEGRATION_RESULT -eq 0 ]; then
    log_success "Testes de integra√ß√£o passaram"
else
    log_warning "Alguns testes de integra√ß√£o falharam"
fi

# Gerar relat√≥rio de cobertura
log_info "Gerando relat√≥rio de cobertura..."
mvn jacoco:report -q
log_success "Relat√≥rio de cobertura gerado"

# Executar SpotBugs (an√°lise est√°tica)
log_info "Executando an√°lise est√°tica (SpotBugs)..."
mvn spotbugs:check -q
SPOTBUGS_RESULT=$?

if [ $SPOTBUGS_RESULT -eq 0 ]; then
    log_success "An√°lise est√°tica passou"
else
    log_warning "SpotBugs encontrou alguns problemas"
fi

echo ""
echo "üìä Resumo dos Testes:"
echo "===================="

# Contar testes
TOTAL_TESTS=$(find . -name "TEST-*.xml" -exec grep -l "testcase" {} \; 2>/dev/null | wc -l)
if [ $TOTAL_TESTS -gt 0 ]; then
    echo "  Testes executados: $TOTAL_TESTS arquivos de teste"
else
    echo "  Testes executados: Verificar logs do Maven"
fi

# Status geral
if [ $TEST_RESULT -eq 0 ] && [ $INTEGRATION_RESULT -eq 0 ]; then
    echo "  Status geral: ‚úÖ PASSOU"
    EXIT_CODE=0
elif [ $TEST_RESULT -eq 0 ]; then
    echo "  Status geral: ‚ö†Ô∏è  PARCIAL (testes unit√°rios OK)"
    EXIT_CODE=1
else
    echo "  Status geral: ‚ùå FALHOU"
    EXIT_CODE=1
fi

echo ""
echo "Relat√≥rios gerados:"
echo "  Cobertura: target/site/jacoco/index.html"
echo "  Checkstyle: target/site/checkstyle.html"
echo "  SpotBugs: target/spotbugsXml.xml"

if [ $EXIT_CODE -eq 0 ]; then
    log_success "üéâ Todos os testes passaram!"
else
    log_warning "‚ö†Ô∏è  Alguns testes falharam. Verifique os logs acima."
fi

exit $EXIT_CODE
